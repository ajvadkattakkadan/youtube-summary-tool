from reportlab.lib.pagesizes import letter
from reportlab.lib import colors
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image, PageBreak
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
import requests
from io import BytesIO
import os
import textwrap

def create_pdf(pdf_path, title, thumbnail_url, channel, summary, duration):
    """
    Create a PDF document containing the YouTube video summary.
    
    Args:
        pdf_path (str): The path where the PDF will be saved
        title (str): The video title
        thumbnail_url (str): URL of the video thumbnail
        channel (str): The channel name
        summary (str): The generated summary text
        duration (str): The video duration
    """
    # Create the document
    doc = SimpleDocTemplate(pdf_path, pagesize=letter)
    styles = getSampleStyleSheet()
    
    # Create custom styles
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=16,
        textColor=colors.darkblue,
        spaceAfter=12
    )
    
    subtitle_style = ParagraphStyle(
        'CustomSubtitle',
        parent=styles['Heading2'],
        fontSize=12,
        textColor=colors.gray,
        spaceAfter=6
    )
    
    header_style = ParagraphStyle(
        'CustomHeader',
        parent=styles['Heading3'],
        fontSize=14,
        textColor=colors.black,
        spaceAfter=6,
        spaceBefore=12
    )
    
    body_style = ParagraphStyle(
        'CustomBody',
        parent=styles['Normal'],
        fontSize=11,
        spaceAfter=10
    )
    
    # Create the content elements
    elements = []
    
    # Add title
    elements.append(Paragraph(f"YouTube Video Summary", title_style))
    elements.append(Spacer(1, 0.1*inch))
    
    # Add video details
    elements.append(Paragraph(f"<b>Title:</b> {title}", subtitle_style))
    elements.append(Paragraph(f"<b>Channel:</b> {channel}", subtitle_style))
    elements.append(Paragraph(f"<b>Duration:</b> {duration}", subtitle_style))
    elements.append(Spacer(1, 0.2*inch))
    
    # Add thumbnail if available
    try:
        response = requests.get(thumbnail_url)
        img = Image(BytesIO(response.content), width=4*inch, height=3*inch)
        elements.append(img)
    except:
        elements.append(Paragraph("(Thumbnail unavailable)", styles['Italic']))
    
    elements.append(Spacer(1, 0.3*inch))
    
    # Add summary header
    elements.append(Paragraph("Summary", header_style))
    
    # Format and add the summary text
    # Break the summary into paragraphs for better readability
    paragraphs = summary.split('\n')
    for para in paragraphs:
        if para.strip():  # Skip empty paragraphs
            elements.append(Paragraph(para, body_style))
    
    # Add footer
    elements.append(Spacer(1, 0.5*inch))
    elements.append(Paragraph("Generated by YouTube Summarizer Tool", styles['Italic']))
    
    # Build the PDF
    doc.build(elements)
    
    return pdf_path